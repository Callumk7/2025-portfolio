---
import { ProjectPicker } from "~/components/interactive/project-picker";
import FlexLayout from "~/layouts/FlexLayout.astro";
import { getCollection } from "astro:content";
import Section from "~/components/layout/Section.astro";
import Title from "~/components/home/Title.astro";
import ContactRow from "~/components/home/ContactRow.astro";
import { FlexRow } from "~/components/sections/flex-row";
import AstroIcon from "~/components/icons/astro.svg";
import React from "~/components/icons/react.svg";
import Next from "~/components/icons/next.svg";
import Remix from "~/components/icons/remix.svg";
import Node from "~/components/icons/node.svg";
import Typescript from "~/components/icons/typescript.svg";
import type { ProcessedProject } from "~/types";
import { getImage } from "astro:assets";

const projectsRaw = await getCollection("projects");
const projects: ProcessedProject[] = await Promise.all(
	projectsRaw.map(async (proj) => {
		let processedImageUrl = null;
		if (proj.data.coverImageUrl) {
			const optimizedImage = await getImage({
				src: proj.data.coverImageUrl,
				width: 640, // Adjust as needed
				height: 480, // Adjust as needed
				format: "webp",
			});
			processedImageUrl = optimizedImage.src;
		}

		return {
			...proj.data,
			coverImageUrl: processedImageUrl,
		};
	}),
);
---

<FlexLayout>
	<Title />
	<ContactRow />
	<Section>
		<ProjectPicker client:visible projects={projects} />
	</Section>
	<Section>
		<FlexRow responsive>
			<div class="icon-large">
				<React class="icon-large__icon" />
				<span class="padding-1">React</span>
			</div>
			<div class="icon-large">
				<Remix class="icon-large__icon" />
				<span class="padding-1">Remix</span>
			</div>
			<div class="icon-large">
				<Next class="icon-large__icon" />
				<span class="padding-1">NextJS</span>
			</div>
			<div class="icon-large">
				<Node class="icon-large__icon" />
				<span class="padding-1">NodeJS</span>
			</div>
			<div class="icon-large">
				<AstroIcon class="icon-large__icon" />
				<span class="padding-1">Astro</span>
			</div>
			<div class="icon-large">
				<Typescript class="icon-large__icon" />
				<span class="padding-1">Typescript</span>
			</div>
		</FlexRow>
	</Section>
</FlexLayout>
